{"version":3,"sources":["components/TabsList.tsx","components/TabsPage.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["TabsList","_ref","tabs","selectedTabId","isSelected","id","_jsx","className","children","map","_ref2","title","classNames","Link","to","concat","TabsPage","_tabs$find","_useParams$tabId","useParams","tabId","isValidTabId","some","tab","_jsxs","_Fragment","find","content","Navbar","React","memo","activePath","useLocation","_useState","useState","_useState2","_slicedToArray","isWrongPath","setIsWrongPath","useEffect","pathname","includes","App","Routes","Route","path","element","Navigate","index","ReactDOM","render","HashRouter","document","getElementById"],"mappings":"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","file":"static/js/main.292e21ee.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Tab } from '../types/Tab';\n\ninterface Props {\n  tabs: Tab[];\n  selectedTabId: string;\n}\n\nexport const TabsList: React.FC<Props> = ({ tabs, selectedTabId }) => {\n  const isSelected = (id: string) => selectedTabId === id;\n\n  return (\n    <div className=\"tabs is-boxed\">\n      <ul>\n        {tabs.map(({ id, title }) => (\n          <li\n            data-cy=\"Tab\"\n            className={classNames({\n              'is-active': isSelected(id),\n            })}\n            key={id}\n          >\n            <Link\n              to={`/tabs/${id}`}\n            >\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { Tab } from '../types/Tab';\nimport { TabsList } from './TabsList';\n\ninterface Props {\n  tabs: Tab[]\n}\n\nexport const TabsPage: React.FC<Props> = ({ tabs }) => {\n  const { tabId = '' } = useParams();\n  const isValidTabId = tabs.some(tab => tab.id === tabId);\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <TabsList\n        tabs={tabs}\n        selectedTabId={tabId}\n      />\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {isValidTabId\n          ? tabs.find(tab => tab.id === tabId)?.content\n          : 'Please select a tab'}\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\n// import React from 'react';\n\nexport const Navbar: React.FC = React.memo(\n  () => {\n    const activePath = useLocation();\n    const [isWrongPath, setIsWrongPath] = useState(false);\n\n    useEffect(() => {\n      if (activePath.pathname === '/'\n        || activePath.pathname.includes('/tabs')) {\n        setIsWrongPath(false);\n      } else {\n        setIsWrongPath(true);\n      }\n    }, [activePath.pathname]);\n\n    return (\n      <nav\n        className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n        data-cy=\"Nav\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <Link\n              to=\"/\"\n              className={classNames('navbar-item', {\n                'is-active': activePath.pathname === '/' && !isWrongPath,\n              })}\n            >\n              Home\n            </Link>\n            <Link\n              to=\"/tabs\"\n              className={classNames('navbar-item', {\n                'is-active': (\n                  activePath.pathname.includes('/tabs')\n                ) && !isWrongPath,\n              })}\n            >\n              Tabs\n            </Link>\n          </div>\n        </div>\n      </nav>\n    );\n  },\n);\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { TabsPage } from './components/TabsPage';\nimport { Navbar } from './components/Navbar';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  return (\n    <>\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n\n          <Routes>\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n\n            <Route\n              path=\"/\"\n              element={<h1 className=\"title\">Home page</h1>}\n            />\n\n            <Route\n              path=\"/home\"\n              element={<Navigate to=\"/\" />}\n            />\n\n            <Route path=\"/tabs\">\n              <Route\n                index\n                element={(<TabsPage tabs={tabs} />\n                )}\n              />\n\n              <Route\n                path=\":tabId\"\n                element={(<TabsPage tabs={tabs} />\n                )}\n              />\n            </Route>\n          </Routes>\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}